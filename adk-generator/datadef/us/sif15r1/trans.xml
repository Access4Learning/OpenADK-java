<!-- ======================================== -->
<!--    Open ADK Object Definition File   -->
<!--     Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s) -->
<!--     All Rights Reserved                  -->
<!-- ======================================== -->
<!--    SIF 1.5r1 trans objects               -->
<!-- ======================================== -->
<adk package="trans" version="1.5r1" name="Transportation and Geographic Information" namespace="http://www.sifinfo.org/infrastructure/1.x">
  <!--BusDriver object-->
  <object name="BusDriver">
    <desc>Information identifying the driver.</desc>
    <attribute name="Status" enum="StaffBoardingStatus" flags="R">
      <desc>Boarding status of the driver.</desc>
    </attribute>
    <element name="Name" type="Name" flags="C">
      <desc>The name of the driver.  Condition is that at least one of this and BusDriver/EmpLink must be included. For a description of this element, see 5.1.18 Name.</desc>
    </element>
    <element name="EmployeePersonalRefId" renderAs="EmpLink" type="IdRefType" surrogate="XPathSurrogate{EmpLink/@EmployeePersonalRefId=.}" flags="O">
      <desc>Attribute carries the GUID of the driver’s EmployeePersonal object.  Condition is that at least one of this and BusDriver/Name must be included.</desc>
    </element>
  </object>
  <!--BusEquipment object-->
  <object name="BusEquipment" topic="true">
    <desc>This object contains information about a type of equipment that may be on a bus. Examples include wheelchair, carseat, etc.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies this type of equipment</desc>
    </attribute>
    <element name="Description" flags="M">
      <desc>Explanation about the type of equipment</desc>
    </element>
  </object>
  <!--BusInfo object-->
  <object name="BusInfo" topic="true">
    <desc>This object contains all of the information about a bus.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies this bus.</desc>
    </attribute>
    <element name="VehicleNumber" flags="M">
      <desc>Vehicle number of ths bus</desc>
    </element>
    <element name="SeatingCapacity" type="UnsignedInt" flags="O">
      <desc>The number of people who can ride on the bus at the same time</desc>
    </element>
    <element name="Contractor" flags="O">
      <desc>The name of the contractor for this bus</desc>
    </element>
    <element name="EquipmentList" type="EquipmentList" flags="O" collapsed="true">
      <desc>Describes any special equipment that is on this bus</desc>
    </element>
  </object>
  <!--BusPositionInfo object-->
  <object name="BusPositionInfo" topic="true">
    <desc>This object exposes telematics information to the zone.  SIF_Events are reported.</desc>
    <attribute name="BusInfoRefId" flags="R">
      <desc>The GUID that identifies the bus.  This object only has meaning as current data for this particular bus.</desc>
    </attribute>
    <element name="Date" flags="M" type="SIFDate">
      <desc>The date of the report from the bus.</desc>
    </element>
    <element name="Time" type="SIFTime" flags="M" surrogate="SIFTimeSurrogate{}">
      <desc>The time of the report from the bus.</desc>
    </element>
    <element name="GridLocation" type="GridLocation" flags="M">
      <desc>The location of the bus.  For a description of this element, see 5.1.14 GridLocation.</desc>
    </element>
    <element name="TelematicsId" flags="O">
      <desc>ID of the hardware unit on the bus that tracks &amp;amp; reports location and status.  The interpretation of the content is deployment specific, but the format must be compact.</desc>
    </element>
    <element name="TelemetryList" type="TelemetryList" collapsed="true" flags="O">
      <desc>Indicators and values provided by the hardware along with this position snapshot.  For events, it is safe to assume that one of these items triggered the hardware to issue an update.The following values are suggested for common reports to enhance interoperability, but each deployment will have items dictated by the infrastructure.  A format for reporting continuous-value metrics is also suggested.Suggested Values: Panic - panic button pressed, Accident - airbag deployed or some other detection, Checkpoint - manually triggered per procedures, Assistance - non-emergency request, Timer - timed report, RouteStatus - change to RouteStatus/Status, Open - door open, Close - door closed, ToD - shifted into "Drive", OffD - shifted off "Drive", StpLght - Stop Lights are on, WrngLght - Warning lights are on, StpArm - Stop arm is out, CrsngGt - Crossing gate is extended, EcmOp - ECM Oil Pressure is Low, EcmOt - ECM Oil Temperature is high, EcmTt - ECM transmission temperature is high, EcmTp - Transmission Oil Pressure is low, EcmFuelPrs - ECM Fuel Pressure is low, EcmExtIdle - ECM Extended engine idle period, EcmOvrSpeed - ECM engine over Speed, EcmVltg - ECM Voltage is low, OutBndry - Out of Boundary, FuelGauge-34pct - suggested continuous-value syntax, minimal use of special characters</desc>
    </element>
    <element name="BusDriver" type="BusDriver" flags="O">
      <desc>Information identifying the driver.</desc>
    </element>
    <element name="BusStaffList" type="BusStaffList" collapsed="true" flags="O">
      <desc>List identifying other staff.  This may include aides, nurses, proctors, etc.</desc>
    </element>
    <element name="RouteStatus" type="RouteStatus" flags="C">
      <desc>If the bus is running a route, this element must be included in the object.  Absence means the bus is not operating a route.</desc>
    </element>
    <element name="OtherStatus" flags="C">
      <desc>If the bus is not running a regularly scheduled route but is transporting (or positioning to transport) passengers as approved and directed by the school district, this element describes the activity.  It’s also used for maintenance, repair, and other authorized movements.  This element is mutually exclusive with RouteStatus.  Absence of both RouteStatus and OtherStatus is acceptable, but may indicate unauthorized operation. The following values are suggested to enhance interoperability, but the field is free-form. Suggested Values: Field Trip, Sporting Event, Support Services, Maintenance, Repair</desc>
    </element>
    <element name="Odometer" type="Odometer" flags="O">
      <desc>Current odometer reading.</desc>
    </element>
    <element name="Speedometer" type="Speedometer" flags="O">
      <desc>Current speedometer reading.</desc>
    </element>
    <element name="Students" type="TransStudents" flags="O" collapsed="True">
      <desc>List of students and their status.  The complete list may be sent with some events (e.g. change in RouteStatus) per district policy, but it is more typical of responses.</desc>
    </element>
  </object>
  <!--BusRouteDetail object-->
  <object name="BusRouteDetail" topic="true">
    <desc>The schedule for a bus route</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies this object</desc>
    </attribute>
    <attribute name="BusRouteInfoRefId" flags="M">
      <desc>GUID that identifies the bus route</desc>
    </attribute>
    <element name="BusStopInfoRefId" renderAs="BusStop" type="IdRefType" flags="M" surrogate="XPathSurrogate{BusStop/@BusStopInfoRefId=.}">
      <desc>Describes a bus stop</desc>
    </element>
    <element name="ArrivalTime" flags="M" type="SIFTime" surrogate="SIFTimeSurrogate{}">
      <desc>The time that the bus associated with this route will stop at this Bus Stop</desc>
    </element>
  </object>
  <!--BusRouteInfo object-->
  <object name="BusRouteInfo" topic="true">
    <desc>This object contains all of the information about a bus route</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies this bus route</desc>
    </attribute>
    <element name="BusInfoRefId" renderAs="Bus" surrogate="XPathSurrogate{Bus/@BusInfoRefId=.}" type="IdRefType" flags="M">
      <desc>The bus associated with this route</desc>
    </element>
    <element name="RouteNumber" flags="M">
      <desc>A unique identifier for the route. It may contain any printable ASCII character. For instance, you may have route 16AM in the morning and 16PM in the afternoon.</desc>
    </element>
    <element name="RouteType" flags="M" enum="RouteType">
      <desc>The type of route</desc>
    </element>
    <element name="MaximumLoad" type="UnsignedInt" flags="O">
      <desc>The maximum number of students who are on the bus at any point along this route</desc>
    </element>
    <element name="Description" flags="O">
      <desc>Short explanation of the route. It may be used to designate an area, or used to color-code bus routes (e.g. "orange" route).</desc>
    </element>
    <element name="Name" type="Name" flags="O">
      <desc>Name of the driver who drives this route.</desc>
    </element>
    <element name="RouteDurationLoaded" renderAs="RouteDuration"  type="duration" flags="O" surrogate="RouteElementSurrogate{}" />
    <element name="RouteDurationTotal" renderAs="RouteDuration" type="duration" flags="O" surrogate="RouteElementSurrogate{}" />
    <element name="RouteDistanceLoaded" renderAs="RouteDistance" type="Distance" surrogate="RouteElementSurrogate{}" flags="O">
      <desc>Refers to the distance the bus drives when at least one student is riding the bus.</desc>
    </element>
    <element name="RouteDistanceTotal" renderAs="RouteDistance" type="Distance" surrogate="RouteElementSurrogate{}" flags="O">
      <desc>Includes the total distance driven for this route including to and from garage.</desc>
    </element>
  </object>
  <!--BusStaff object-->
  <object name="BusStaff">
    <desc>List identifying other staff.  This may include aides, nurses, proctors, etc.</desc>
    <attribute name="Status" enum="StaffBoardingStatus" flags="R">
      <desc>Boarding status of this staff member.</desc>
    </attribute>
    <element name="Name" type="Name" flags="C">
      <desc>The name of the driver.  Condition is that at least one of this and BusDriver/EmpLink must be included. For a description of this element, see 5.1.18 Name.</desc>
    </element>
    <element name="EmployeePersonalRefId" type="IdRefType" renderAs="EmpLink" surrogate="XPathSurrogate{EmpLink/EmployeePersonalRefId=.}" flags="O" />
  </object>
  <!--BusStopInfo object-->
  <object name="BusStopInfo" topic="true">
    <desc>This object contains information about a bus stop.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies this location</desc>
    </attribute>
    <element name="Description" flags="M">
      <desc>An explanation of this location</desc>
    </element>
    <element name="GridLocation" flags="O" type="GridLocation">
      <desc>The location of the bus stop</desc>
    </element>
  </object>
  <!--DisembarkBusRouteDetail object-->
  <object name="DisembarkBusRouteDetail" datatype="IdRefType">
    <attribute name="SIF_RefObject" type="string" flags="M" />
  </object>
  <!--DistanceUnit enum-->
  <enum name="DistanceUnit">
    <value name="KM" value="km" desc="km" />
    <value name="M" value="m" desc="m" />
  </enum>
  <!--Eligibility enum-->
  <enum name="Eligibility">
    <value name="BUS" value="Bus" desc="Bus" />
    <value name="WALK" value="Walk" desc="Walk" />
    <value name="BUS_HAZARD" value="BusHazard" desc="Bus Hazard" />
    <value name="BUS_OUT_OF_ATTENDANCE" value="BusOutOfAttendance" desc="Bus Out of Attendance" />
    <value name="PARENT_PAY" value="ParentPay" desc="Parent Pay" />
    <value name="UNKNOWN" value="Unknown" desc="Unknown" />
  </enum>
  <!--EmbarkBusRouteDetail object-->
  <object name="EmbarkBusRouteDetail" datatype="IdRefType">
    <attribute name="SIF_RefObject" type="string" flags="M" />
  </object>
  <!--EmpLink object-->
  <object name="EmpLink" empty="True">
    <desc>Attribute carries the GUID of the driver’s EmployeePersonal object.  Condition is that at least one of this and BusDriver/Name must be included.</desc>
    <attribute name="EmployeePersonalRefId" flags="R">
      <desc>GUID</desc>
    </attribute>
  </object>
  <!--Equipment object-->
  <object name="Equipment" empty="true">
    <desc>Describes equipment on a bus</desc>
    <attribute name="BusEquipmentRefId" flags="R">
      <desc>GUID that identifies the type of equipment</desc>
    </attribute>
    <attribute name="Count" flags="R" key="false">
      <desc>The number of pieces of this type of equipment</desc>
    </attribute>
  </object>
  <!--EquipmentList object-->
  <object name="EquipmentList" collapsed="true">
    <element name="Equipment" type="Equipment" flags="OR" />
  </object>
  <!--HomeBusRouteDetail object-->
  <object name="HomeBusRouteDetail" datatype="IdRefType" renderAs="~HomeBusRouteDetail/@BusRouteDetailRefId">
    <desc>GUID referring to a BusRouteDetail object that identifies the origin bus stop for an inbound route or the destination bus stop for an outbound route. If the HomeBusRouteDetail element does not exist, then the student does not ride a bus to/from school.</desc>
    <attribute name="SIF_RefObject" flags="R">
      <desc>Must be set to BusRouteDetail</desc>
    </attribute>
  </object>
  <!--Odometer object-->
  <object name="Odometer" datatype="decimal">
    <desc>Current odometer reading.</desc>
    <attribute name="Unit" enum="DistanceUnit" flags="R">
      <desc>Units used in the odometer reading. Values: "km" - kilometers, "m" - miles</desc>
    </attribute>
  </object>
  <!--RouteDistance object-->
  <object name="Distance" datatype="decimal">
    <attribute name="Unit" enum="DistanceUnit" flags="R">
      <desc>Units used in the odometer reading.</desc>
    </attribute>
  </object>
  <!--RouteStatus object-->
  <object name="RouteStatus">
    <attribute name="Status" enum="RouteStatusStatus" flags="R" key="false">
      <desc>Status of the route.</desc>
    </attribute>
    <attribute name="BusRouteInfoRefId" type="IdRefType" flags="R">
      <desc>GUID</desc>
    </attribute>
  </object>
  <!--RouteStatusStatus enum-->
  <enum name="RouteStatusStatus">
    <value name="BEGIN" value="Begin" desc="Begin" />
    <value name="END" value="End" desc="End" />
    <value name="CONTINUE" value="Continue" desc="Continue" />
  </enum>
  <!--RouteType enum-->
  <enum name="RouteType">
    <value name="INBOUND" value="Inbound" desc="Inbound" />
    <value name="OUTBOUND" value="Outbound" desc="Outbound" />
  </enum>
  <!--SchoolBusRouteDetail object-->
  <object name="SchoolBusRouteDetail" datatype="IdRefType">
    <desc>
      GUID referring to a BusRouteDetail object that identifies the origin bus stop for an outbound route or the destination bus stop for an inbound route.
      If the SchoolBusRouteDetail does not exist, then the student does not ride a bus to/from school.
    </desc>
  </object>
  <!--Speedometer object-->
  <object name="Speedometer" datatype="decimal">
    <desc>Current speedometer reading.</desc>
    <attribute name="Unit" enum="DistanceUnit" flags="R">
      <desc>Units used in the speedometer reading.  Values: "km" - kilometers/hour, "m" - miles/hour</desc>
    </attribute>
  </object>
  <!--StaffBoardingStatus enum-->
  <enum name="StaffBoardingStatus">
    <value name="ON" value="On" desc="boarded the bus and no exit detected" />
    <value name="OFF" value="Off" desc="exited the bus" />
    <value name="SCHED" value="Sched" desc="scheduled for this run, but either hasn't boarded or the telematics hardware can't confirm their identity" />
  </enum>
  <!--StudentBoardingStatus enum-->
  <enum name="StudentBoardingStatus">
    <value name="ON" value="On" desc="boarded the bus and no exit detected" />
    <value name="OFF" value="Off" desc="Off" />
    <value name="ENTERED" value="Entered" desc="boarded the bus since previous event" />
    <value name="EXITED" value="Exited" desc="left the bus since previous event" />
    <value name="SCHED" value="Sched" desc="scheduled for this run, but either hasn't boarded or the telematics hardware can't confirm their identity" />
  </enum>
  <!--StudentTransportInfo object-->
  <object name="StudentTransportInfo" topic="true">
    <desc>This object contains transportation information about a student. Students should
          have at least two StudentTransportInfo objects associated with them: one for 
          inbound information (getting to school) and one for outbound information (leaving
          school). If their transportation changes based on the day of the week, then a
          student will have more than two StudentTransportInfo objects.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies this object</desc>
    </attribute>
    <attribute name="StudentPersonalRefId" flags="R">
      <desc>GUID that identifies the student that this object refers to</desc>
    </attribute>
    <attribute name="Type" flags="R" enum="StudentTransportInfoType">
      <desc>The direction of transportation that this object refers to.</desc>
    </attribute>
    <attribute name="DayOfWeek" flags="R">
      <desc>This attribute indicates the day(s) of the week to which this object refers. Value values are: the string "MoTuWeThFrSaSu" representing Monday through Sunday, or a subset of the string.</desc>
    </attribute>
    <attribute name="SchoolInfoRefId" flags="R">
      <desc>GUID referring to the school that the student attends on these days of the week.</desc>
    </attribute>
    <element name="Eligibility" enum="Eligibility" flags="O">
      <desc>Eligibility status of the student for district transportation for this trip.</desc>
    </element>
    <element name="HomeBusRouteDetail" type="HomeBusRouteDetail" flags="O" surrogate="XPathSurrogate{HomeBusRouteDetail/@BusRouteDetailRefId=.}" >
      <desc>If the HomeBusRouteDetail element does not exist then the student does not ride a bus to/from school.</desc>
    </element>
    <element name="TransferPoints" type="TransferPoints" flags="O" collapsed="true">
      <desc>There should be one TransferPoint for each intermediate point on a trip. The "embark" and "disembark" bus stops for a single transfer point must be at the same location. To order multiple TransferPoint elements, use the Time element of the BusStopInfo objects referenced by the attributes.</desc>
    </element>
    <element name="SchoolBusRouteDetail" type="SchoolBusRouteDetail" flag="O" surrogate="XPathSurrogate{SchoolBusRouteDetail/@BusRouteDetailRefId=.}">
      <desc>If the SchoolBusRouteDetail element does not exist then the student does not ride a bus to/from school.</desc>
    </element>
  </object>
  <!--StudentTransportInfoType enum-->
  <enum name="StudentTransportInfoType">
    <value name="INBOUND" value="Inbound" desc="Inbound" />
    <value name="OUTBOUND" value="Outbound" desc="Outboud" />
  </enum>
  <!--Telemetry object-->
  <object name="Telemetry" datatype="String" />
  <!--TelemetryList object-->
  <object name="TelemetryList">
    <element name="Telemetry" type="Telemetry" flags="OR">
      <desc>Indicators and values provided by the hardware along with this position snapshot. For events, it is safe to assume that one of these items triggered the hardware to issue an update.</desc>
    </element>
  </object>
  <!--TransferPoint object-->
  <object name="TransferPoint" empty="true">
    <desc>Describes a transfer point for each intermediate point on a trip</desc>
    <element name="EmbarkBusRouteDetail" surrogate="XPathSurrogate{@EmbarkBusRouteDetailRefId=.}" type="EmbarkBusRouteDetail" flags="R">
      <desc>The GUID that identifies the bus stop/route when the student gets on the bus.</desc>
    </element>
    <element name="DisembarkBusRouteDetail" surrogate="XPathSurrogate{@DisembarkBusRouteDetailRefId=.}" type="DisembarkBusRouteDetail" flags="R">
      <desc>The GUID that identifies the bus stop/route when the student gets off the bus.</desc>
    </element>
  </object>
  <!--TransStudent object-->
  <object name="TransStudent">
    <desc>List of students and their status.  The complete list may be sent with some events (e.g. change in RouteStatus) per district policy, but it is more typical of responses.</desc>
    <attribute name="StudentPersonalRefId" flags="R">
      <desc>GUID that identifies the student that this element refers to.</desc>
    </attribute>
    <attribute name="Status" enum="StudentBoardingStatus" flags="R">
      <desc>Boarding status of this student</desc>
    </attribute>
  </object>
  <!--TransStudents object-->
  <object name="TransStudents" collapsed="true">
    <element name="Student" type="TransStudent" flags="OR" />
  </object>
  <!--TransferPoint object-->
  <object name="TransferPoint" empty="true">
    <desc>Describes a transfer point for each intermediate point on a trip</desc>
    <element name="EmbarkBusRouteDetail" type="EmbarkBusRouteDetail" surrogate="XPathSurrogate{@EmbarkBusRouteDetailRefId=.}" flags="R">
      <desc>The GUID that identifies the bus stop/route when the student gets on the bus.</desc>
    </element>
    <element name="DisembarkBusRouteDetail" type="DisembarkBusRouteDetail" surrogate="XPathSurrogate{@DisembarkBusRouteDetailRefId=.}" flags="R">
      <desc>The GUID that identifies the bus stop/route when the student gets off the bus.</desc>
    </element>
  </object>
  <!--TransferPoints object-->
  <object name="TransferPoints" collapsed="true">
    <element name="TransferPoint" type="TransferPoint" flags="OR">
      <desc>There should be one TransferPoint for each intermediate point on a trip. The "embark" and "disembark" bus stops for a single transfer point must be at the same location. To order multiple TransferPoint elements, use the Time element of the BusStopInfo objects referenced by the attributes.</desc>
    </element>
  </object>
</adk>
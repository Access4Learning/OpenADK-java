<!-- ======================================== -->
<!--    Open ADK Object Definition File   -->
<!--     Copyright (c)1998-2011 Pearson Education, Inc. or its affiliate(s) -->
<!--     All Rights Reserved                  -->
<!-- ======================================== -->
<!--    SIF 1.5r1 food objects                -->
<!-- ======================================== -->
<adk package="food" version="1.5r1" name="Food Services" namespace="http://www.sifinfo.org/infrastructure/1.x">
  <!--AccountType enum-->
  <enum name="AccountType">
    <value name="PREPAIDCASH" value="PrepaidCash" desc="PrepaidCash" />
    <value name="BREAKFASTCREDIT" value="BreakfastCredit" desc="BreakfastCredit" />
    <value name="LUNCHCREDIT" value="LunchCredit" desc="LunchCredit" />
    <value name="NA" value="NA" desc="NA" />
  </enum>
  <!--Agency object-->
  <object name="Agency">
    <desc>Reimbursing agency</desc>
    <attribute name="Type" enum="AgencyTypeCode" flags="R">
      <desc>Type of the reimbursing agency. Values: Federal, State, Local, Other</desc>
    </attribute>
    <attribute name="Name" key="false" flags="R">
      <desc>The name of the reimbursing agency. This attribute is to be used when the Type is set as Other. The value of the attribute is set to "NA" when Type is "Federal", "State" or "Local"</desc>
    </attribute>
    <element name="Rates" type="Rates" flags="M" collapsed="true" />
  </object>
  <!--AgencyTypeCode enum-->
  <enum name="AgencyTypeCode">
    <value name="FEDERAL" value="Federal" desc="Federal" />
    <value name="STATE" value="State" desc="State" />
    <value name="LOCAL" value="Local" desc="Local" />
    <value name="OTHER" value="Other" desc="Other" />
  </enum>
  <!--Customer object-->
  <object name="Customer" renderAs="FSCustomerId">
    <attribute name="SIF_RefId" renderAs="Value"  type="IdRefType" flags="R">
      <desc>GUID of the SIF customer type.</desc>
    </attribute>
    <attribute name="SIF_RefObject" renderAs="Type"  enum="CustomerObjectName" flags="R">
      <desc>SIF customer type. If the type is StaffPersonalRefId then EarnedStatus is included. If the type is StudentPersonalRefId, then MealStatus in included.</desc>
    </attribute>
    <element name="MealStatus" type="MealStatus" flags="C" />
    <element name="EarnedStatus" type="EarnedStatus" flags="C" />
  </object>
  <!--CustomerObjectName enum-->
  <enum name="CustomerObjectName">
    <value name="STUDENTPERSONAL" value="StudentPersonal" desc="StudentPersonal" />
    <value name="STAFFPERSONAL" value="StaffPersonal" desc="StaffPersonal" />
    <value name="OTHER" value="Other" desc="Other" />
  </enum>
  <!--EarnedStatus object-->
  <object name="EarnedStatus">
    <desc>This gives information about a staff member's meal status.</desc>
    <attribute name="Type" enum="YesNoNA" flags="R">
      <desc>Earned status. In SIF objects where the EarnedStatus is required and does not apply NA should be used.</desc>
    </attribute>
    <element name="StartDate" type="SIFDate" flags="O">
      <desc>Date on which earned status became effective (inclusive).</desc>
    </element>
    <element name="EndDate" type="SIFDate" flags="O">
      <desc>Date on which earned status was last in effect. This attribute is conditional upon the StartDate attribute. It exists only if the startdate attribute exists.</desc>
    </element>
  </object>
  <!--FoodCategoryName enum-->
  <enum name="FoodCategoryName">
    <value name="DAIRY" value="1" desc="Dairy: butter, cheese, eggs, milk, yogurt" />
    <value name="SPICES" value="2" desc="Spices, seasonings, flavorings, leavening agents" />
    <value name="BABYFOOD" value="3" desc="Babyfood" />
    <value name="FATS" value="4" desc="Fats and oils: margarine, shortening, mayonnaise, salad dressings" />
    <value name="POULTRY" value="5" desc="Poultry Products" />
    <value name="SOUPS" value="6" desc="Soups, sauces and gravies" />
    <value name="LUNCHEON_MEAT" value="7" desc="Luncheon meat and sausage" />
    <value name="BREAKFAST_CEREALS" value="8" desc="Breakfast Cereals" />
    <value name="FRUITS" value="9" desc="Fruits and fruit juices" />
    <value name="PORK" value="10" desc="Pork Products" />
    <value name="VEGETABLES" value="11" desc="Vegetables (includes beans and legumes)" />
    <value name="NUTS_AND_SEEDS" value="12" desc="Nuts and seeds" />
    <value name="BEEF" value="13" desc="Beef" />
    <value name="BEVERAGES" value="14" desc="Beverages" />
    <value name="FISH" value="15" desc="Fish" />
    <value name="CONDIMENTS" value="16" desc="Condiments: catsup, mustard, relish" />
    <value name="LAMB_VEAL_GAME" value="17" desc="Lamb, Veal and Game Products" />
    <value name="BAKED" value="18" desc="Baked goods: breads, cakes, cookies, crackers, pies, rolls" />
    <value name="SNACKS" value="19" desc="Snacks and sweets" />
    <value name="GRAINS" value="20" desc="Grains" />
    <value name="FAST_FOODS" value="21" desc="Fast Foods" />
    <value name="MEALS_ENTREES" value="22" desc="Meals, Entrees, and Sidedishes" />
    <value name="MISCELLANEOUS" value="29" desc="Miscellaneous" />
    <value name="GENERAL_RECIPES" value="30" desc="General recipes" />
    <value name="BREAD_AND_CEREAL" value="31" desc="Bread and cereal recipes" />
    <value name="DESSERT_RECIPES" value="32" desc="Dessert recipes" />
    <value name="MAIN_DISH_RECIPES" value="33" desc="Main dish recipes" />
    <value name="SALAD_AND_DRESSING_RECIPES" value="34" desc="Salad and dressing recipes" />
    <value name="SANDWICH_RECIPES" value="35" desc="Sandwich recipes" />
    <value name="SAUCE_AND_GRAVY_RECIPES" value="36" desc="Sauce and gravy recipes" />
    <value name="SOUP_RECIPES" value="37" desc="Soup recipes" />
    <value name="VEGETABLE_RECIPES" value="38" desc="Vegetable recipes" />
    <value name="BREAKFAST_RECIPES" value="39" desc="Breakfast recipes" />
    <value name="PURCHASED_LUNCH" value="43" desc="Purchased mixed dishes – lunch entrees/main dishes (pizza, etc)" />
    <value name="PURCHASED_BREAKFAST" value="44" desc="Purchased mixed dishes – breakfast entrees/main dishes" />
    <value name="MEAT_SUBSTITUTES" value="45" desc="Meat substitutes/Vegetable proteins" />
  </enum>
  <!--FoodserviceItem object-->
  <object name="FoodserviceItem" topic="true">
    <desc>This object communicates information about food service items.  SIF_Events are reported.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies this item</desc>
    </attribute>
    <element name="LocalId" flags="M">
      <desc>Item number as presented to user.Refer to section 5.1.16 LocalId.</desc>
    </element>
    <element name="Description" flags="O">
      <desc>Description of Item</desc>
    </element>
    <element name="ElectronicIdList" type="ElectronicIdList" flags="O" collapsed="true">
      <desc>Barcode, Magstripe or PIN associated with this item.  Refer to 5.1.7 ElectronicId.</desc>
    </element>
    <element name="ItemCategory" enum="FoodCategoryName" flags="O">
      <desc>The category is derived from the Child Nutrition Database's food category codes/names (Source:  Food Category Name File [CNDB]).  
      Agents may use the actual codes or a district's local definition of the names associated with the codes.  
      The Child Nutrition Database [CNDB] is updated on a yearly basis by the USDA. 
      Examples: Milk, Meat, Vegetables, Other</desc>
    </element>
  </object>
  <!--FoodserviceItemPortion object-->
  <object name="FoodserviceItemPortion" topic="true">
    <desc>Note that this version of the object does not contain any object that define item pricing.  This task is left for future implementations.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies this item's portion</desc>
    </attribute>
    <element name="FoodserviceItemUnitRefId" flags="M">
      <desc>GUID that identifies related item portion</desc>
    </element>
    <element name="ItemPortionQuantity" type="Decimal" flags="M">
      <desc>Quantity of item portion (number of units)</desc>
    </element>
    <element name="ItemPortionType" enum="ItemPortionTypeValue" flags="M">
      <desc>Type of item unit Values: Component, Entree, AlaCarte, Bonus, Combo, NonFood</desc>
    </element>
    <element name="Description" flags="O">
      <desc>Optional description of amount</desc>
    </element>
  </object>
  <!--FoodserviceItemSales object-->
  <object name="FoodserviceItemSales" topic="true">
    <desc>This object gives the sales details for the items sold for a specified date.   SIF_Events are reported.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies this object</desc>
    </attribute>
    <element name="SchoolInfoRefId" flags="M">
      <desc>GUID that identifies the school for this object</desc>
    </element>
    <element name="Date" type="SIFDate" flags="M">
      <desc>Date of sales</desc>
    </element>
    <element name="Program" type="Program" flags="M">
      <desc>Refer to section 5.1.23 Program.</desc>
    </element>
    <element name="ItemQuantities" type="ItemQuantities" flags="O" collapsed="true" />
  </object>
  <!--FoodserviceItemUnit object-->
  <object name="FoodserviceItemUnit" topic="true">
    <desc>This object describes the unit for an item.  SIF_Events are reported.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies this unit</desc>
    </attribute>
    <element name="FoodserviceItemRefId" flags="M">
      <desc>GUID that identifies related item</desc>
    </element>
    <element name="Description" flags="M">
      <desc>Description of unit ("cup", "teaspoon", etc.)</desc>
    </element>
    <element name="MeasureDescriptionCode" flags="M">
      <desc>Child Nutrition Database [CNDB] standard code describing unit.  The database is updated on a yearly basis by the USDA.</desc>
    </element>
    <element name="GramWeight" type="Decimal" flags="M">
      <desc>Gram weight of this item in terms of MeasureDescriptionCode</desc>
    </element>
  </object>
  <!--FoodserviceMealPrices object-->
  <object name="FoodserviceMealPrices" topic="true">
    <desc>This object is a site's meal prices for each grade program, meal status, meal type and grade level.  SIF_Events are reported.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies this meal price.</desc>
    </attribute>
    <element name="SchoolInfoRefId" flags="M">
      <desc>GUID that identifies the school this meal price belongs to</desc>
    </element>
    <element name="Program" type="Program" flags="M">
      <desc>Refer to section 5.1.23 Program.</desc>
    </element>
    <element name="Prices" type="Prices" flags="M" collapsed="true">
      <desc>Price of the meal</desc>
    </element>
  </object>
  <!--FoodserviceReimbursementRates object-->
  <object name="FoodserviceReimbursementRates" topic="true">
    <desc>This object describes the federal, state, local and other reimbursement rates for a school.  SIF_Events are reported.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies this object.</desc>
    </attribute>
    <element name="SchoolInfoRefId" flags="M">
      <desc>GUID that identifies the school.</desc>
    </element>
    <element name="StartDate" type="SIFDate" flags="M">
      <desc>Effective start date for the reimbursement rates</desc>
    </element>
    <element name="EndDate" type="SIFDate" flags="M">
      <desc>Effective end date for the reimbursement rates</desc>
    </element>
    <element name="Program" type="Program" flags="M">
      <desc>Refer to 5.1.23 Program.</desc>
    </element>
    <element name="Agencies" type="Agencies" flags="M" collapsed="true">
      <desc>Reimbursing agency</desc>
    </element>
  </object>
  <!--FoodserviceSales object-->
  <object name="FoodserviceSales" topic="true">
    <desc>This object communicates the daily sales information (dollar values).  SIF_Events are reported.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies the daily meal sales object</desc>
    </attribute>
    <element name="SchoolInfoRefId" flags="M">
      <desc>School for which the sales object applies</desc>
    </element>
    <element name="Date" type="SIFDate" flags="M">
      <desc>Date on which the sales occurred.</desc>
    </element>
    <element name="Program" type="Program" flags="M">
      <desc>Refer to section 5.1.23 Program.</desc>
    </element>
    <element name="SalesAmounts" type="SalesAmounts" flags="M" collapsed="true" />
  </object>
  <!--FoodserviceTransaction object-->
  <object name="FoodserviceTransaction" topic="true">
    <desc>This object communicates food service transaction information. This is the key object that will be present for every food service transaction.  SIF_Events are reported.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies food service transaction</desc>
    </attribute>
    <element name="SchoolInfoRefId" flags="M">
      <desc>GUID that identifies the school/site of account transaction</desc>
    </element>
    <element name="Program" type="Program" flags="M">
      <desc>Program. For a description of this element, see 5.1.23 Program.</desc>
    </element>
    <element name="TransactionDate" type="SIFDate" flags="M">
      <desc>Date of transaction</desc>
    </element>
    <element name="TransactionTime" type="SIFTime" flags="M" surrogate="SIFTimeSurrogate{}">
      <desc>Time of transaction. See the SIF_Time information in section 4.1.1 SIF_Header</desc>
    </element>
    <element name="TransactionTypes" type="TransactionTypes" flags="O" collapsed="true" />
    <element name="Customer" renderAs="FSCustomerId" type="Customer" flags="M">
      <desc>The customer doing the transaction. The customer can be student, staff or any other person.</desc>
    </element>
    <element name="FSAmount" renderAs="AmountEx" type="FSAmount" flags="M">
      <desc>Amount.</desc>
    </element>
    <element name="Tax" type="MonetaryAmount" flags="O">
      <desc>Amount of tax.Note: Final amount is AmountEx + Tax</desc>
    </element>
    <element name="Description" flags="O">
      <desc>Description of the Transaction</desc>
    </element>
    <element name="Voided" enum="YesNo" flags="M">
      <desc>This flag tells us if the transaction is voided.</desc>
    </element>
  </object>
  <!--FoodserviceTransactionDetails object-->
  <object name="FoodserviceTransactionDetails" topic="true">
    <desc>This object gives the transaction distribution for food service transactions of type other than "Purchase". So, this object can be requested for transactions of type "Prepayment", "Repayment", "Refund", "Adjustment".  SIF_Events are reported.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies transaction details</desc>
    </attribute>
    <element name="FoodserviceTransactionRefId" flags="M">
      <desc>GUID that identifies food service transaction</desc>
    </element>
    <element name="Amounts" type="FSAmounts" flags="M" collapsed="true">
      <desc>Amount. This amount refers to the funds being directed inwards/ outwards from the customer's account. That is: these amounts reflect the changes to the account balances.</desc>
    </element>
    <element name="Description" flags="O">
      <desc>Description</desc>
    </element>
  </object>
  <!--FoodserviceTransactionPayMethod object-->
  <object name="FoodserviceTransactionPayMethod" topic="true">
    <desc>This object communicates the funding for a given transaction. By the term funding we refer to the form of payment that is made for the transaction.  SIF_Events are reported.</desc>
    <attribute name="RefId" flags="R">
      <desc>GUID that identifies the payment</desc>
    </attribute>
    <element name="FoodserviceTransactionRefId" flags="M">
      <desc>GUID that identifies food service transaction</desc>
    </element>
    <element name="TransactionPayMethods" type="TransactionPayMethods" flags="M" collapsed="true">
      <desc>Transaction method</desc>
    </element>
  </object>
  <!--FSAmount object-->
  <object name="FSAmount" renderAs="AmountEx" dataType="decimal">
    <desc>Amount</desc>
    <attribute name="Type" enum="FSAmountType" flags="R" key="false">
      <desc>Type of amount. The currency unit is implied; namely USD. Note that when this common element is used not all of the following values apply. There are notes to indicate values that are applicable. The type Value is used to denote the value of the amount.</desc>
    </attribute>
    <attribute name="Credits" type="Decimal" renderAs="Quantity" flags="R" key="false">
      <desc>Number of credits. This attribute is does not apply to cash or value and hence has a value "0". It only applies to types BreakfastCredit and LunchCredit.</desc>
    </attribute>
  </object>
  <!--FSAmounts object-->
  <object name="FSAmounts" renderAs="Amounts">
    <!-- Note: Event though FSAmounts is not really rendered in this version of SIF, it is
         necessary to define it using renderAs so that the ElementDef.name() field is correctly
         set to "Amounts"-->
    <element name="Amount" renderAs="AmountEx" type="FSAmount" flags="OR" />
  </object>
  <!--FSAmountType enum-->
  <enum name="FSAmountType">
    <value name="CASH" value="Cash" desc="Cash" />
    <value name="BREAKFASTCREDIT" value="BreakfastCredit" desc="BreakfastCredit" />
    <value name="LUNCHCREDIT" value="LunchCredit" desc="LunchCredit" />
    <value name="CHECK" value="Check" desc="Check" />
    <value name="CREDITCARD" value="CreditCard" desc="CreditCard" />
    <value name="ACH" value="ACH" desc="ACH" />
    <value name="ACTUAL_VALUE" value="Value" desc="Value" />
  </enum>
  <!--ItemPortionTypeValue enum-->
  <enum name="ItemPortionTypeValue">
    <value name="COMPONENT" value="Component" />
    <value name="ENTREE" value="Entree" />
    <value name="ALACARTE" value="AlaCarte" />
    <value name="BONUS" value="Bonus" />
    <value name="COMBO" value="Combo" />
    <value name="NONFOOD" value="NonFood" />
  </enum>
  <!--ItemQuantities object-->
  <object name="ItemQuantities">
    <element name="ItemQuantity" type="ItemQuantity" flags="OR" />
  </object>
  <!--ItemQuantity object-->
  <object name="ItemQuantity">
    <attribute name="FoodserviceItemPortionRefId" type="IdRefType" flags="R" key="false">
      <desc>GUID of FoodserviceItemPortion object</desc>
    </attribute>
    <attribute name="Value" type="Decimal" flags="R" key="false">
      <desc>The value of item quantity</desc>
    </attribute>
    <element name="MealType" enum="MealTypes" flags="O" />
    <element name="GradeLevels" type="GradeLevels" flags="O" />
    <element name="Cost" type="MonetaryAmount" flags="O">
      <desc>The cost (dollar value) of the item sold.</desc>
    </element>
  </object>
  <!--MealStatus object-->
  <object name="MealStatus" empty="true">
    <desc>Information about a student's meal status</desc>
    <attribute name="Type" flags="R" enum="FreeReducedStatus">
      <desc>The meal status type (Free, Reduced, or None)</desc>
    </attribute>
    <element name="StartDate" flags="O" type="SIFDate">
      <desc>Date on which meal status became effective (inclusive).</desc>
    </element>
    <element name="EndDate" flags="O" type="SIFDate">
      <desc>Date on which meal status was last in effect. This attribute is conditional upon the StartDate attribute. It exists only if the StartDate attribute exists.</desc>
    </element>
  </object>
  <!--MealTypes enum-->
  <enum name="MealTypes">
    <value name="FIRSTMEAL" value="FirstMeal" desc="FirstMeal" />
    <value name="SECONDMEAL" value="SecondMeal" desc="SecondMeal" />
    <value name="STAFFMEAL" value="StaffMeal" desc="StaffMeal" />
    <value name="ADULTMEAL" value="AdultMeal" desc="AdultMeal" />
    <value name="ALACARTE" value="AlaCarte" desc="AlaCarte" />
  </enum>
  <!--Price object-->
  <object name="Price">
    <desc>Price of the meal</desc>
    <attribute name="Value" type="decimal" flags="R">
      <desc>The price value</desc>
    </attribute>
    <element name="MealStatus" type="MealStatus" flags="M">
      <desc>This gives information about a student's meal status.</desc>
    </element>
    <element name="MealType" enum="MealTypes" surrogate="XPathSurrogate{MealType/@Type=.}" flags="M">
      <desc>This gives information about a meal type</desc>
    </element>
    <element name="GradeLevels" type="GradeLevels" flags="M">
      <desc>Refer to section 5.1.12 GradeLevels.</desc>
    </element>
  </object>
  <!--Prices object-->
  <object name="Prices">
    <element name="Price" type="Price" flags="OR" />
  </object>
  <!--Rate object-->
  <object name="Rate">
    <desc>Reimbursement Rate of the meal</desc>
    <attribute name="SevereNeed" enum="YesNoNA" key="false" flags="R">
      <desc>Severe need identifier for the rate. When SevereNeed is "Yes" then the rate shown is the combined rate. For certain programs the severe need identifier does not apply. In such cases the value "NA" should be used.</desc>
    </attribute>
    <attribute name="Value" flags="R">
      <desc>The rate value</desc>
    </attribute>
    <element name="MealStatus" type="MealStatus" flags="M">
      <desc>This gives information about a student's meal status.</desc>
    </element>
  </object>
  <!--Rates object-->
  <object name="Rates">
    <element name="Rate" type="Rate" flags="OR">
      <desc>Reimbursement rate of the meal</desc>
    </element>
  </object>
  <!--SalesAmount object-->
  <object name="SalesAmount" dataType="decimal">
    <desc>Dollar value (count * cost per unit) done for all grade levels</desc>
    <attribute name="Type" enum="SalesAmountType" flags="R" key="false">
      <desc>Type of SalesAmount. This denotes the form of incoming funds for the sales done. Values: Cash, Account, Charged, Earned</desc>
    </attribute>
    <attribute name="AccountType" enum="AccountType" flags="R" key="false">
      <desc>Type of account to which sales amounts apply.Values: PrepaidCash, BreakfastCredit, LunchCredit, NA The AccountType is set to NA when Type is set as Earned.</desc>
    </attribute>
  </object>
  <!--SalesAmounts object-->
  <object name="SalesAmounts">
    <element name="SalesAmount" type="SalesAmount" flags="OR">
      <desc>Dollar value (count * cost per unit) done for all grade levels</desc>
    </element>
  </object>
  <!--SalesAmountType enum-->
  <enum name="SalesAmountType">
    <value name="CASH" value="Cash" desc="Cash" />
    <value name="ACCOUNT" value="Account" desc="Account" />
    <value name="CHARGED" value="Charged" desc="Charged" />
    <value name="EARNED" value="Earned" desc="Earned" />
  </enum>
  <!--StaffMeal object-->
  <object name="StaffMeal" topic="true">
    <desc>This object communicates the current meal status and account status of a given staff member. This object indicates whether the staff member is entitled to earn meals. This object will respond to a change event and propagate the new information to subscribing agents.  SIF_Events, typically Change events, can be reported.</desc>
    <attribute name="StaffPersonalRefId" flags="R">
      <desc>The GUID of the staff to whom this object is linked.</desc>
    </attribute>
    <element name="EarnedStatus" type="EarnedStatus" flags="M">
      <desc>This gives information about a staff member's meal status.</desc>
    </element>
    <element name="LastBreakfastDate" type="SIFDate" flags="M">
      <desc>Last breakfast served date</desc>
    </element>
    <element name="LastLunchDate" type="SIFDate" flags="M">
      <desc>Last lunch served date</desc>
    </element>
    <element name="Amounts" type="FSAmounts" flags="O" collapsed="true" />
  </object>
  <!--StudentMeal object-->
  <object name="StudentMeal" topic="true">
    <desc>This object contains information about the meal status of a student.</desc>
    <attribute name="StudentPersonalRefId" flags="R">
      <desc>The GUID of the student to whom this object is linked.</desc>
    </attribute>
    <element name="MealStatus" type="MealStatus" flags="O">
      <desc>Information about a student's meal status</desc>
    </element>
    <element name="SchoolYear" type="GYear" flags="O" deprecated="true">
      <desc>School year for which the information is applicable, expressed as the four-digit year in which the school year ends (e.g., "2004" for the 2003-04 school year).</desc>
    </element>
    <element name="LastBrkDate" flags="O" type="SIFDate" deprecated="true">
      <desc>Date the student last had breakfast (deprecated)</desc>
    </element>
    <element name="LastLunDate" flags="O" type="SIFDate" deprecated="true">
      <desc>Date the student last had lunch (deprecated)</desc>
    </element>
    <element name="Cash" flags="O" deprecated="true">
      <desc>The student's cash balance (deprecated)</desc>
    </element>
    <element name="BrkCredits" flags="O" deprecated="true">
      <desc>Number of breakfast credits remaining (deprecated)</desc>
    </element>
    <element name="LunCredits" flags="O" deprecated="true">
      <desc>Number of lunch credits remaining (deprecated)</desc>
    </element>
    <element name="LastBreakfastDate" flags="O" type="SIFDate">
      <desc>Last reimbursable breakfast served date</desc>
    </element>
    <element name="LastLunchDate" flags="O" type="SIFDate">
      <desc>Last reimbursable lunch served date</desc>
    </element>
    <element name="Amounts" type="FSAmounts" flags="O" collapsed="true">
      <desc>Amount.</desc>
    </element>
  </object>
  <!--TransactionPayMethod object-->
  <object name="TransactionPayMethod">
    <desc>Transaction method</desc>
    <attribute name="Type" enum="TransactionPayMethodType" flags="R">
      <desc>This refers to the way the payment was made. Values: Payment, Refund, Charge, Usage</desc>
    </attribute>
    <element name="Amounts" type="FSAmounts" flags="MR" collapsed="true">
      <desc>AmountThis amount is the form of the incoming funds for this transaction. For example; the payment can be made by a credit card.</desc>
    </element>
  </object>
  <!--TransactionPayMethods object-->
  <object name="TransactionPayMethods">
    <element name="TransactionPayMethod" type="TransactionPayMethod" flags="OR">
      <desc>Transaction method</desc>
    </element>
  </object>
  <!--TransactionPayMethodType enum-->
  <enum name="TransactionPayMethodType">
    <value name="PAYMENT" value="Payment" desc="Payment" />
    <value name="REFUND" value="Refund" desc="Refund" />
    <value name="CHARGE" value="Charge" desc="Charge" />
    <value name="USAGE" value="Usage" desc="Usage" />
  </enum>
  <!--TransactionType object-->
  <object name="TransactionType" enum="TransactionTypeValue" />
  <!--TransactionTypes object-->
  <object name="TransactionTypes">
    <element name="TransactionType" surrogate="XPathSurrogate{TransactionType/@Type=.}" type="TransactionType" flags="OR">
      <desc>Type of transaction</desc>
    </element>
  </object>
  <!--TransactionTypeValue enum-->
  <enum name="TransactionTypeValue">
    <value name="PURCHASE" value="Purchase" desc="Purchase" />
    <value name="PREPAYMENT" value="Prepayment" desc="Prepayment" />
    <value name="REFUND" value="Refund" desc="Refund" />
    <value name="REPAYMENT" value="Repayment" desc="Repayment" />
    <value name="ADJUSTMENT" value="Adjustment" desc="Adjustment" />
  </enum>
</adk>